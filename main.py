# ‚úÖ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î Discord Bot + Google Sheets + LINE Messaging API (Push Message)
# ‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠ Replit ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ micropip


import os
import threading
import datetime

import discord
import gspread
import requests
import pytz
from flask import Flask, jsonify
from discord.ext import commands
from oauth2client.service_account import ServiceAccountCredentials


# üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ENV (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î ENV ‡∏ö‡∏ô Replit ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ .env ‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á)
DISCORD_TOKEN = "MTM4MzQwMzIxNTgxNDUyOTAzNA.GEvOAc.LobX6gu-l-X0uMlBM2bJ_Im5OX0GWbfNhPW0rg"
LINE_TOKEN = "8JyepaNlwFyJg1fx3HV/Doo0CD1MBHsI5hPIVX6ubchSIsjd0vrGJ/DLNX+h6uuoPTyUMhMn+txyELjOqSjjRh1puS+Ec00X2lvUnZwE4Yb9I1XYk4m5ABA5p9poXO2vWBYSGaMOE4cccICvH61GhQdB04t89/1O/w1cDnyilFU="
LINE_TO = "C57be23d1e8fe30f246d2322fde92f6c9"  # groupId ‡∏´‡∏£‡∏∑‡∏≠ userId ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° LINE


# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if not DISCORD_TOKEN:
    raise EnvironmentError('‚ùå Environment variable DISCORD_TOKEN is missing')
if not LINE_TOKEN:
    raise EnvironmentError('‚ùå Environment variable LINE_TOKEN is missing')
if not LINE_TO:
    raise EnvironmentError('‚ùå Environment variable LINE_TO is missing')

# üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets API
scope = [
    'https://spreadsheets.google.com/feeds',
    'https://www.googleapis.com/auth/drive'
]
creds  = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', scope)
client = gspread.authorize(creds)
sheet  = client.open('checkin_log').sheet1

# üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° LINE (Push Message)
def push_line_message(event_type: str, username: str, timestamp: str):
    # ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏≤‡∏° event
    icon  = 'üì•' if event_type == '‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô' else 'üì§'
    title = '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô üë•'

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢
    dt_naive = datetime.datetime.strptime(timestamp, '%Y-%m-%d %H:%M:%S')
    dt_thai  = pytz.timezone('Asia/Bangkok').localize(dt_naive)
    formatted = dt_thai.strftime('%d/%m/%Y %H:%M:%S')

    # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏á‡πÑ‡∏õ LINE
    text = (
        f"{title}\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"{icon} {username} {event_type}\n"
        f"üïí ‡πÄ‡∏ß‡∏•‡∏≤: {formatted}\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üìå ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"
    )

    url = 'https://api.line.me/v2/bot/message/push'
    headers = {'Authorization': f'Bearer {LINE_TOKEN}', 'Content-Type': 'application/json'}
    payload = {'to': LINE_TO, 'messages': [{'type': 'text', 'text': text}]}
    resp = requests.post(url, headers=headers, json=payload)
    if resp.status_code != 200:
        print('‚ùå LINE Error:', resp.status_code, resp.text)

# üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (Flask) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UptimeRobot
app = Flask(__name__)

# ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö GET ‡πÅ‡∏•‡∏∞ HEAD ‡∏ó‡∏±‡πâ‡∏á root ‡πÅ‡∏•‡∏∞‡∏ó‡∏∏‡∏Å path
@app.route('/', methods=['GET', 'HEAD'])
def home():
    return jsonify({'status': 'Bot is alive'}), 200

@app.route('/<path:path>', methods=['GET', 'HEAD'])
def fallback(path):
    return jsonify({'status': 'Bot is alive'}), 200

# ‡∏à‡∏±‡∏ö‡∏ó‡∏∏‡∏Å 404 ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Bot still alive
@app.errorhandler(404)
def page_not_found(e):
    return jsonify({'status': 'Bot is alive'}), 200

# ‡∏£‡∏±‡∏ô Flask ‡πÉ‡∏ô thread ‡πÅ‡∏¢‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏ö‡∏≠‡∏ó
threading.Thread(target=lambda: app.run(host='0.0.0.0', port=8080), daemon=True).start()

# üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Discord Bot
intents = discord.Intents.default()
intents.message_content = True
bot     = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    print(f'‚úÖ Bot online: {bot.user.name}')

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    now       = datetime.datetime.now(pytz.timezone('Asia/Bangkok'))
    timestamp = now.strftime('%Y-%m-%d %H:%M:%S')
    content   = message.content.strip().lower()

    if content == '‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô':
        sheet.append_row([message.author.name, '‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô', timestamp])
        await message.channel.send(f"{message.author.mention} ‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß")
        push_line_message('‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô', message.author.name, timestamp)

    elif content == '‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô':
        sheet.append_row([message.author.name, '‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô', timestamp])
        await message.channel.send(f"{message.author.mention} ‚úÖ ‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß")
        push_line_message('‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô', message.author.name, timestamp)

    await bot.process_commands(message)

# üîπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
bot.run(DISCORD_TOKEN)

